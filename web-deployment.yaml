apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server-deployment
  namespace: exampleapp
  labels:
    app: web-server
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1 # kann in Prozent angegeben werden
      maxSurge: 1 # kann in Prozent angegeben werden
  selector:
    matchLabels:
      app: web-server
  template:
    metadata:
      labels:
        app: web-server
    spec:
      containers:
      - name: web-server
        image: trennety/web-server
        ports:
        - containerPort: 80
        env:
          - name: MYSQL_DATABASE_HOST
            value: mysql-service   # Service name for the database
          - name: MYSQL_USER
            value: Patrick
          - name: MYSQL_PASSWORD
            value: Patrick2024
          - name: MYSQL_DATABASE
            value: ExampleAppDatabase
        readinessProbe:
          httpGet:
            path: /
            port: 80
          failureThreshold: 30 # check 30 times
          periodSeconds: 10 # every 10 seconds -> 5 Minutes
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15 # start 15 seconds after the container starts OR startup probe succeeds
          periodSeconds: 20
          timeoutSeconds: 5 # fail after 5 seconds without an answer
          failureThreshold: 3 # restart container after 3 fails